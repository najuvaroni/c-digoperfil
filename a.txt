import React, { useState, useContext } from 'react';
import { StyleSheet, View, Text, TouchableOpacity, Image, Dimensions } from 'react-native';
import Dados from '../context/DadosContext';
import { LineChart } from "react-native-chart-kit";

export default function ({ navigation }) {
  const { receitas, despesas } = useContext(Dados);
  const [showBalance, setShowBalance] = useState(false);
  const [exchangeRate, setExchangeRate] = useState(5.0);

  let totalDespesas = despesas.reduce((soma, item) => soma + parseInt(item.valor), 0);
  let totalReceitas = receitas.reduce((soma, item) => soma + parseInt(item.valor), 0);

  const data = [
    { label: 'Despesas', value: totalDespesas },
    { label: 'Receitas', value: totalReceitas },
  ];

  const chartConfig = {
    backgroundGradientFrom: "#1E2923",
    backgroundGradientFromOpacity: 0,
    backgroundGradientTo: "#08130D",
    backgroundGradientToOpacity: 0.5,
    color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,
    strokeWidth: 2,
    barPercentage: 0.5,
    useShadowColorFromDataset: false
  };

  return (
    <View style={css.container}>
      <View style={css.sec}>
        <Text style={css.textOla}>
          Olá, como você está?
        </Text>
      </View>

      <TouchableOpacity style={css.cardGeral} onPress={() => setShowBalance(!showBalance)}>
        <View style={css.geral}>
          <Text style={css.textoGeral}>Saldo disponível</Text>
          <Text>V</Text>
          <View>
            <Text style={css.valorGeral}>
              R${(totalReceitas - totalDespesas).toFixed(2)}
            </Text>
            <Text style={css.valorGeral}>
              ${((totalReceitas - totalDespesas) / exchangeRate).toFixed(2)}
            </Text>
          </View>
        </View>
      </TouchableOpacity>

      <View style={css.cardsContainer}>
        <TouchableOpacity
          style={[css.card, { backgroundColor: '#ff6868' }]}
          onPress={() => navigation.navigate('Despesas')}>
          <Image style={css.icon} source={require('./oimg2.png')} />
          <View>
            <Text style={css.cardText}>Despesas</Text>
            <Text style={[css.cardValor, { color: '#ff6868' }]}>R$ {totalDespesas.toFixed(2)}</Text>
          </View>
        </TouchableOpacity>
        <TouchableOpacity
          style={[css.card, { backgroundColor: '#67d67e' }]}
          onPress={() => navigation.navigate('Receitas')}>
          <Image style={css.icon} source={require('./img1.png')} />
          <View>
            <Text style={css.cardText}>Receitas</Text>
            <Text style={[css.cardValor, { color: '#67d67e' }]}>R$ {totalReceitas.toFixed(2)}</Text>
          </View>
        </TouchableOpacity>
      </View>

      {showBalance ? (
        <View>
          <Text>Bezier Line Chart</Text>
          <LineChart
            data={{
              labels: ["January", "February", "March", "April", "May", "June"],
              datasets: [
                {
                  data: [
                    Math.random() * 100,
                    Math.random() * 100,
                    Math.random() * 100,
                    Math.random() * 100,
                    Math.random() * 100,
                    Math.random() * 100
                  ]
                }
              ]
            }}
            width={Dimensions.get("window").width}
            height={220}
            yAxisLabel="$"
            yAxisSuffix="k"
            yAxisInterval={1}
            chartConfig={{
              backgroundColor: "#e26a00",
              backgroundGradientFrom: "#fb8c00",
              backgroundGradientTo: "#ffa726",
              decimalPlaces: 2,
              color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,
              labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,
              style: {
                borderRadius: 16
              },
              propsForDots: {
                r: "6",
                strokeWidth: "2",
                stroke: "#ffa726"
              }
            }}
            bezier
            style={{
              marginVertical: 8,
              borderRadius: 16
            }}
          />
        </View>
      ) : null}
    </View>
  );
}

const css = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    backgroundColor: '#090262',
    paddingVertical: 30,
  },
  cardGeral: {
    backgroundColor: '#fff',
    width: '90%',
    borderRadius: 30,
    backgroundColor: '#87cefa',
    marginTop: 30,
  },
  geral: {
    alignItems: 'center',
    paddingTop: 20,
    paddingBottom: 20,
    flexDirection: "row",
    justifyContent: "space-around"
  },
  cardsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    width: '100%',
    paddingHorizontal: 20,
    marginTop: 20,
  },
  card: {
    flex: 1,
    borderRadius: 20,
    paddingVertical: 30,
    paddingHorizontal: 20,
    justifyContent: 'space-between',
    alignItems: 'center',
    flexDirection: 'row',
    marginRight: 10,
  },
  icon: {
    width: 40,
    height: 40,
    marginRight: 10,
  },
  cardText: {
    color: '#fff',
    fontSize: 18,
  },
  cardValor: {
    color: '#fff',
    fontSize: 24,
  },
  textoGeral: {
    color: '#black',
    fontSize: 20,
  },
  textOla: {
    marginTop: 50,
    marginRight: 250,
    fontSize: 15
  },
  valorGeral: {
    fontSize: 32,
    color: '#ffff',
    textAlign: 'center',
    padding: 20
  },
  sec: {
    backgroundColor: '#87cefa',
    flexDirection: "row",
    width: "100%",
    justifyContent: "space-between",
    alignItems: "center",
    paddingHorizontal: 20,
    paddingVertical: 10,
    paddingTop: 50,
  }
});
